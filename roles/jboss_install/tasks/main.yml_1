---
- set_fact: domain_controller=False
  when: domain_controller is not defined

- set_fact: standalone=False
  when: standalone is not defined

#- name: PINGING
#  ping:

- name: stop jboss service
  service: name=jboss-as state=stopped
  when: not standalone|bool
  ignore_errors: yes

- name: stop jboss service
  service: name=jboss-as-{{node_name}} state=stopped
  when: standalone|bool
  ignore_errors: yes

- name: ip addr
  debug:
    msg: "{{jboss_bind}}"

- name: INFO
  debug:
    msg: "JBOSS INSTALL - version {{ jboss_version }}"

#Prepare node enviroment

- name: Install requirements
  yum: name={{ item }} state=installed
  loop:
    - unzip
    - java-1.8.0-openjdk-devel.x86_64

- name: Disabling firewalld service
  service: name=firewalld state=stopped

- name: Remove firewalld from autostart
  service: name=firewalld enabled=no

- name: Disabling SELinux
  lineinfile:
   path: "/etc/selinux/config"
   regexp: '^SELINUX='
   line: SELINUX=disabled

- name: Rebooting node
  shell: sleep 5 & reboot now
  async: 1
  poll: 0

- name: Wait to node wake up
  wait_for:
    host: "{{inventory_hostname}}"
    state: started
    delay: 5
    timeout: 30
  delegate_to: 127.0.0.1

#Creating user/group/folders

- name: Remove jboss dir
  file: path={{jboss_dir}} state=absent

- name: Upload ActiveMQ distr
  copy: src=roles/jboss_install/files/activemq/6.3/activemq-rar-6.3.0.rar dest=/tmp

- name: Upload JBoss EAP distr
  copy: src=roles/jboss_install/files/jboss_eap/6.4/{{ distr_name }} dest=/tmp

- name: Create JBoss group
  group: name=jboss state=present system=yes

- name: Create JBoss user
  user: name=jboss group=jboss system=yes

- name: Create JBoss dir
  file: state=directory dest={{ jboss_dir }} owner=jboss group=jboss

- name: Unzip JBoss EAP distr
  unarchive: copy=no src=/tmp/{{ distr_name }} dest={{ jboss_dir }}

- name: Create config dir
  file: state=directory dest=/etc/jboss-as owner=root mode=644

- name: Add JBoss admin user
  command: "{{ jboss_dir }}/jboss-eap-6.4/bin/add-user.sh -u MyAdmin -p password1@ -s"

- name: add users for slaves
  command: "{{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/add-user.sh -u {{item}} -p {{item}}123!@# -s"
  with_items: "{{jboss_slaves}}"
  environment:
      JAVA_HOME: "/usr/"
  when: domain_controller|bool and jboss_slaves is defined

- name: Set permissions for dir
  shell: "chown -R jboss:jboss {{jboss_dir}}"

- name: provide domain.xml config
  template: src=domain.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/domain.xml owner=jboss mode=0644
  when: domain_controller|bool

- name: provide host-master.xml config
  template: src=host-master.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/host.xml owner=jboss mode=0644
  when: domain_controller|bool

- name: provide host-slave.xml config
  template: src=host-slave.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/host.xml owner=jboss mode=0644
  when: not domain_controller|bool and not standalone|bool

#Autostart settings

- name: provide startup config
  template: src=jboss.conf.j2 dest=/etc/jboss-as/jboss-as-{{node_name}}.conf owner=root mode=0644
  notify:
    - restart eap
  when: not standalone|bool

- name: provide startup config standalone
  template: src=jboss_standalone.conf.j2 dest=/etc/jboss-as/jboss-as-{{node_name}}.conf owner=root mode=0644
  notify:
    - restart eap-standalone
  when: standalone|bool

- name: provide init.d script domain
  template: src=jboss_init.j2 dest=/etc/init.d/jboss-as owner=root mode=0755
  notify:
    - restart eap
  when: not standalone|bool

- name: provide init.d script standalone
  template: src=jboss_init_standalone.j2 dest=/etc/init.d/jboss-as-{{node_name}} owner=root mode=0755
  notify:
    - restart eap-standalone
  when: standalone|bool and (ansible_service_mgr == "upstart" or ansible_service_mgr == "sysvinit")

- name: provide init.d script domain for systemd
  template: src=jboss_init.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/init.d/systemd_jboss-as-domain.sh owner=root mode=0755
  notify:
    - restart eap
  when: ansible_service_mgr == "systemd" and not standalone|bool

- name: provide init.d script standalone for systemd
  template: src=jboss_init_standalone.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/init.d/systemd_jboss-as-{{node_name}}.sh owner=root mode=0755
  notify:
    - restart eap-standalone
  when: ansible_service_mgr == "systemd" and standalone|bool

- name: provide systemd script
  template: src=jboss.service.j2 dest=/etc/systemd/system/jboss-as.service
  notify:
    - restart eap
  when: ansible_service_mgr == "systemd" and not standalone|bool

- name: provide systemd script standalone
  template: src=jboss_standalone.service.j2 dest=/etc/systemd/system/jboss-as-{{node_name}}.service
  notify:
    - restart eap
  when: ansible_service_mgr == "systemd" and standalone|bool

- name: Reload systemd daemon
  systemd: daemon-reload=yes
  when: ansible_service_mgr == "systemd"

- name: Add JBoss to autostart STANDALONE
  service: name=jboss-as-{{node_name}} enabled=yes
  when: standalone|bool

- name: Start jboss STANDALONE
  service: name=jboss-as-{{node_name}} state=started
  when: standalone|bool

- name: Add JBoss to autostart
  service: name=jboss-as enabled=yes
  when: not standalone|bool

- name: Start jboss
  service: name=jboss-as state=started
  when: not standalone|bool


- name: Waiting service
  wait_for:
    timeout: 10

# Deploy the activemq-rar-6.3.0.rar

- name: Deploying activemq-rar-6.3.0.rar
  ignore_errors: true
  command: "{{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/jboss-cli.sh --controller={{jboss_master_host}}:{{9999+(port_offset|int)}} -c --commands='deploy /tmp/activemq-rar-6.3.0.rar'"
  environment:
    JAVA_HOME: "/usr/"

