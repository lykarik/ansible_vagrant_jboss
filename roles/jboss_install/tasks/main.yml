---
- name: Upload jboss files
  copy: src={{item}} dest=/tmp
  loop:
    - "{{files}}/jboss_eap/6.4/jboss-eap-6.4.0.zip"

- name: Stop jboss service
  service: name=jboss-as state=stopped
  ignore_errors: yes

- name: Remove jboss dir
  file: path={{jboss_dir}} state=absent

- name: Upload ActiveMQ distr
  copy: src=roles/jboss_install/files/activemq/6.3/activemq-rar-6.3.0.rar dest=/tmp

- name: Upload JBoss EAP distr
  copy: src=roles/jboss_install/files/jboss_eap/6.4/{{ distr_name }}.0.zip dest=/tmp

- name: Create JBoss group
  group: name=jboss state=present system=yes

- name: Create JBoss user
  user: name=jboss group=jboss system=yes

- name: Create JBoss dir
  file: state=directory dest={{ jboss_dir }} owner=jboss group=jboss

- name: Unzip JBoss EAP distr
  unarchive: copy=no src=/tmp/{{ distr_name }}.0.zip dest={{ jboss_dir }}

- name: Create config dir
  file: state=directory dest=/etc/jboss-as owner=root mode=644

- name: Add JBoss admin user
  command: "{{ jboss_dir }}/jboss-eap-6.4/bin/add-user.sh -u MyAdmin -p {{jboss_master_pass}} -s"

- name: Add users for slaves
  command: "{{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/add-user.sh -u {{item}} -p {{item}}123!@# -s"
  with_items: "{{jboss_slaves}}"
  environment:
      JAVA_HOME: "/usr/"
  loop: "{{jboss_slaves}}"
  when: item == "{{node_name}}"

- name: Set permissions for dir
  shell: "chown -R jboss:jboss {{jboss_dir}}"

- name: Provide domain.xml config
  template: src=domain.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/domain.xml owner=jboss mode=0644

- name: Provide host-master.xml config
  template: src=host-master.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/host.xml owner=jboss mode=0644
  loop: "{{jboss_masters}}"
  when: item == "{{node_name}}"

- name: Provide host-slave.xml config
  template: src=host-slave.xml.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/domain/configuration/host.xml owner=jboss mode=0644
  loop: "{{jboss_slaves}}"
  when: item == "{{node_name}}"
  

- name: Provide startup config
  template: src=jboss.conf.j2 dest=/etc/jboss-as/jboss-as-{{node_name}}.conf owner=root mode=0644
  notify:
    - restart eap

- name: Provide init.d script domain
  template: src=jboss_init.j2 dest=/etc/init.d/jboss-as owner=root mode=0755
  notify:
    - restart eap

- name: Provide init.d script domain for systemd
  template: src=jboss_init.j2 dest={{jboss_dir}}/jboss-eap-{{jboss_version}}/bin/init.d/systemd_jboss-as-domain.sh owner=root mode=0755
  notify:
    - restart eap

- name: Provide systemd script
  template: src=jboss.service.j2 dest=/etc/systemd/system/jboss-as.service
  notify:
    - restart eap

- name: Reload systemd daemon
  systemd: daemon-reload=yes
  when: ansible_service_mgr == "systemd"

- name: Add JBoss to autostart
  service: name=jboss-as enabled=yes

- name: Start jboss
  service: name=jboss-as state=started
  
- name: Waiting after service start
  wait_for:
    timeout: 5

- name: Patching to final ver.
  include: patching.yml

- name: Waiting after patching
  wait_for:
    timeout: 5

