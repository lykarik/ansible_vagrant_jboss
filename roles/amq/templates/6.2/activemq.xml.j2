<!--
  Manage by ansible sctipt
  Copyright (C) Red Hat, Inc.
  http://redhat.com

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Allows us to use system properties and fabric as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <bean class="io.fabric8.mq.fabric.ConfigurationProperties"/>
        </property>
    </bean>

    <broker xmlns="http://activemq.apache.org/schema/core"
            brokerName="${broker-name}"
            dataDirectory="${data}" schedulerSupport="true"
            start="false" restartAllowed="false">

        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic=">" producerFlowControl="true">
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit="1000"/>
                  </pendingMessageLimitStrategy>
                </policyEntry>
				<policyEntry queue="EventManagerMDBQueue" producerFlowControl="true" memoryLimit="512mb">
                    <deadLetterStrategy>
                        <sharedDeadLetterStrategy>
                            <deadLetterQueue>
                                <queue physicalName="DeadLetterIncomingMDBQueue"/>
                            </deadLetterQueue>
                        </sharedDeadLetterStrategy>
                    </deadLetterStrategy>
                </policyEntry>
                <policyEntry queue=">" producerFlowControl="true" memoryLimit="512mb" queuePrefetch="1" maxPageSize="10000" maxBrowsePageSize="10000">
					<deadLetterStrategy>
                        <sharedDeadLetterStrategy>
                            <deadLetterQueue>
                                <queue physicalName="DeadLetterOutgoingMDBQueue"/>
                            </deadLetterQueue>
                        </sharedDeadLetterStrategy>
                    </deadLetterStrategy>
                    <networkBridgeFilterFactory>
                        <conditionalNetworkBridgeFilterFactory replayWhenNoConsumers="true" replayDelay="500"/>
                    </networkBridgeFilterFactory>
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy>

        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>

        <networkConnectors>
{% if amq_connections is defined %}
{% for conn in amq_connections %}
            <networkConnector name="{{conn.name}}" uri="static:(tcp://{{conn.host}}:{{conn.port|default(61617)}})" userName="{{conn.user|default('admin')}}" password="{{conn.password|default('admin123!@#')}}" suppressDuplicateQueueSubscriptions="true" networkTTL="2" conduitSubscriptions="false"/>
{% endfor %}
{% endif %}
        <!--
            <networkConnector name="mq01->mq02" uri="static:(tcp://jkh-mq02:61616)" userName="admin" password="admin" decreaseNetworkConsumerPriority="true" suppressDuplicateQueueSubscriptions="true"/>
        -->
        </networkConnectors>

        <persistenceAdapter>
            <kahaDB directory="{{data_dir}}"/>
        </persistenceAdapter>

        <plugins>
			<redeliveryPlugin fallbackToDeadLetter="true" sendToDlqIfMaxRetriesExceeded="true">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <defaultEntry>
                            <redeliveryPolicy maximumRedeliveries="5" initialRedeliveryDelay="5000" redeliveryDelay="5000" />
                        </defaultEntry>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
        <!--
            <jaasAuthenticationPlugin configuration="karaf" />
            <authorizationPlugin>
              <map>
                <authorizationMap groupClass="org.apache.karaf.jaas.boot.principal.RolePrincipal">
                  <authorizationEntries>
                    <authorizationEntry queue=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                    <authorizationEntry topic=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                    <authorizationEntry topic="ActiveMQ.Advisory.>" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" write="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" admin="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" />
                  </authorizationEntries>
                  <tempDestinationAuthorizationEntry>
                    <tempDestinationAuthorizationEntry read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                  </tempDestinationAuthorizationEntry>
                </authorizationMap>
              </map>
            </authorizationPlugin>
        -->
        </plugins>

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="70"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="100 gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="50 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <transportConnectors>
        <!--
            <transportConnector name="openwire" uri="tcp://0.0.0.0:0?maximumConnections=1000" updateClusterClients="true" rebalanceClusterClients="true"/>
        -->
            <transportConnector name="openwire" uri="tcp://0.0.0.0:0?maximumConnections=2000" updateClusterClients="true"/>
        </transportConnectors>
    </broker>

</beans>

